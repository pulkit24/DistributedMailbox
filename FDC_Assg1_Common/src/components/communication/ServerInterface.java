/* All functions supported by the chat server.
 * 
 * Usage:
 * 1. Connect to the system using connect()
 * This returns an ID that must be used for all succeeding interactions.
 * 
 * 2. Interact with the system:
 * 		2.1 Send messages using deposit(...)
 * 		2.2 Retrieve messages using retrieve(...)
 * 		2.3 Find out about other users using inquire(...)
 * 
 * 3. Disconnect from the system using disconnect(...)
 */
package components.communication;

public interface ServerInterface {

	/**
	 * Connect to the system.
	 * 
	 * @param request
	 *            The request packet (to simply validate the request)
	 * @return The reply packet containing client's ID generated by the server.
	 */
	public RPCMessage connect(RPCMessage request);

	/**
	 * Disconnect from the system.
	 * 
	 * @param request
	 *            The request packet containing the client's ID.
	 * @returns The reply packet with the success status of the operation.
	 */
	public RPCMessage disconnect(RPCMessage request);

	/**
	 * Send message to another user.
	 * 
	 * @param request
	 *            The request packet containing the sender ID, recipient ID and the string message.
	 * @returns The reply packet with the success status of the operation.
	 */
	public RPCMessage deposit(RPCMessage request);

	/**
	 * Check and retrieve any messages available for the current user from the server.
	 * 
	 * @param request
	 *            The request packet containing the client's ID.
	 * @returns The reply packet with the success status of the operation and all messages as CSV.
	 */
	public RPCMessage retrieve(RPCMessage request);

	/**
	 * Check if a particular user is connected to the system.
	 * 
	 * @param request
	 *            The request packet containing the ID of client and the user being looked up.
	 * @returns The reply packet with the success status of the operation.
	 */
	public RPCMessage inquire(RPCMessage request);
}
